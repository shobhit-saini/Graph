#include<bits/stdc++.h>
using namespace std;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////Edge adding section//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int addedge(vector<int> adj[], int u, int v)
{
	adj[u].push_back(v);
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////Printing of graph////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int print_graph(vector<int>adj[], int V)
{
	int i = 0;
	vector<int>::iterator itr;
	for(i = 0; i < V; i++)
	{
		cout << i;
		for(itr = adj[i].begin(); itr != adj[i].end(); itr++)
		{
			cout << "->" << *itr ;
		}
		cout << "\n";
	}
}

int BFS(vector<int> adj[], int V)
{
	int S;
	cout << "Enter the starting vertex:";
	cin >> S;
	cout << "Breadth First Traversal starting from vertex " << S << " is:\n";
	bool visited[V] = {0};
	queue<int> q;
	q.push(S);
	visited[S] = 1;
	vector<int>:: iterator itr;
	while(!q.empty())
	{
		for(itr = adj[q.front()].begin(); itr != adj[q.front()].end(); itr++)
		{
			if(visited[*itr] == 0)
			{
				visited[*itr] = 1;
				q.push(*itr);
			}
		}
		cout << q.front() <<"\t";
		q.pop();
	}
	
	
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////Main Function///////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int main()
{
	int V = 0, E = 0, i = 0, u, v;
	
	cout << "Enter the Number of vertices:";
	cin >> V;
	
	vector<int> adj[V];
	
	cout << "Enter the Number of Edges:";
	cin >> E;
	
	for(i = 0; i < E; i++)
	{
		cin >> u >> v;
		addedge(adj, u, v);
	}
	
	print_graph(adj, V);
	
	BFS(adj, V);
}
